#include <stdio.h>
#include<math.h>

void initialPermutation(unsigned char block[8]);
void finalPermutation(unsigned char block[8]);
void feistelRound(unsigned char block[8], unsigned char subkey[6]);
void desEncrypt(unsigned char block[8], unsigned char key[8]);

int main() {
    unsigned char key[8] = {0x13, 0x34, 0x57, 0x79, 0x9B, 0xBC, 0xDF, 0xF1};
    unsigned char plaintext[8] = {0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF};

    desEncrypt(plaintext, key);

    printf("Ciphertext: ");
    int i;
    for ( i = 0; i < 8; i++) {
        printf("%02X ", plaintext[i]);
    }
    printf("\n");

    return 0;
}

void initialPermutation(unsigned char block[8]) {
    
}

void finalPermutation(unsigned char block[8]) {
  
}

void feistelRound(unsigned char block[8], unsigned char subkey[6]) {
}

void desEncrypt(unsigned char block[8], unsigned char key[8]) {
    initialPermutation(block);
    int round;

    for ( round = 0; round < 16; round++) {
        feistelRound(block, key);  
    }

    finalPermutation(block);
}
