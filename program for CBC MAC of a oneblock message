#include <stdio.h>
#include <stdint.h>
#include <string.h>

#define BLOCK_SIZE 16

void xorBlocks(uint8_t *result, const uint8_t *block1, const uint8_t *block2) {
	int i;
    for (i = 0; i < BLOCK_SIZE; i++)
        result[i] = block1[i] ^ block2[i];
}

void encryptBlock(uint8_t *output, const uint8_t *input) {
    memcpy(output, input, BLOCK_SIZE);
}

void cbcMac(const uint8_t *key, const uint8_t *message, uint8_t *mac) {
    uint8_t t[BLOCK_SIZE];
    memcpy(t, message, BLOCK_SIZE);
    xorBlocks(t, t, message + BLOCK_SIZE);
    encryptBlock(mac, t);
}

int main() {
    uint8_t key[BLOCK_SIZE] = {0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x97, 0x57, 0xd3, 0x59, 0x80, 0x13};
    uint8_t message[2 * BLOCK_SIZE] = {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10};
    uint8_t mac[BLOCK_SIZE];

    cbcMac(key, message, mac);

    printf("CBC-MAC: ");
    int i;
    for ( i = 0; i < BLOCK_SIZE; i++)
        printf("%02x", mac[i]);
    printf("\n");

    return 0;
}
